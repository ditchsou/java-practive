@SuppressWarnings("deprecation")
		public static void main(String args[]) {
    		
    		SimpleDateFormat sdf = new SimpleDateFormat();// 格式化时间 
            sdf.applyPattern("yyyy-MM-dd HH:mm:ss a");// a为am/pm的标记  
            Date date = new Date();// 获取当前时间 
            System.out.println("现在时间：" + sdf.format(date)); // 输出已经格式化的现在时间（24小时制） 
            System.out.println(date.getYear() + 1900); // 必须加上1900
            System.out.println(date.getMonth() + 1); // 0~11，必须加上1
            System.out.println(date.getDate()); // 1~31，不能加1
            // 转换为String:
            System.out.println(date.toString());
            // 转换为GMT时区:
            System.out.println(date.toGMTString());
            // 转换为本地时区:
            System.out.println(date.toLocaleString());
         // Calendar基本用法 获取当前时间:
            Calendar c = Calendar.getInstance();
            int y = c.get(Calendar.YEAR);
            int m = 1 + c.get(Calendar.MONTH);
            int d = c.get(Calendar.DAY_OF_MONTH);
            int w = c.get(Calendar.DAY_OF_WEEK);
            int hh = c.get(Calendar.HOUR_OF_DAY);
            int mm = c.get(Calendar.MINUTE);
            int ss = c.get(Calendar.SECOND);
            int ms = c.get(Calendar.MILLISECOND);
            System.out.println(y + "-" + m + "-" + d + " " + w + " " + hh + ":" + mm + ":" + ss + "." + ms);
            sdf.setTimeZone(TimeZone.getTimeZone("Asia/Tokyo"));
            System.out.println("东京时间："+sdf.format(c.getTime()));
         // calendar设定指定时间
         // 当前时间:
          //  Calendar c = Calendar.getInstance();
            // 清除所有:
            c.clear();
            // 设置2019年:
            c.set(Calendar.YEAR, 2019);
            // 设置9月:注意8表示9月:
            c.set(Calendar.MONTH, 8);
            // 设置2日:
            c.set(Calendar.DATE, 2);
            // 设置时间:
            c.set(Calendar.HOUR_OF_DAY, 21);
            c.set(Calendar.MINUTE, 22);
            c.set(Calendar.SECOND, 23);
            System.out.println("设定指定时间： "+new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(c.getTime()));
            // 2019-09-02 21:22:23
            
            // timezone基本用法 获取当前时间:
            TimeZone tzDefault = TimeZone.getDefault(); // 当前时区
            TimeZone tzGMT9 = TimeZone.getTimeZone("GMT+09:00"); // GMT+9:00时区
            TimeZone tzNY = TimeZone.getTimeZone("America/New_York"); // 纽约时区
            System.out.println(tzDefault.getID()); // Asia/Shanghai
            System.out.println(tzGMT9.getID()); // GMT+09:00
            System.out.println(tzNY.getID()); // America/New_York
            
            //时区转换
            Calendar d1 = Calendar.getInstance();
            // 清除所有:
            d1.clear();
            // 设置为北京时区:
            d1.setTimeZone(TimeZone.getTimeZone("Asia/Shanghai"));
            // 设置年月日时分秒:
            d1.set(2019, 10 /* 11月 */, 20, 8, 15, 0);
            // sdf.applyPattern("yyyy-MM-dd HH:mm:ss a");// a为am/pm的标记  
            sdf.setTimeZone(TimeZone.getTimeZone("America/New_York"));
            System.out.println(sdf.format(d1.getTime()));
            // 2019-11-19 19:15:00
